
.pokemon-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: 10px;
    padding: 10px;
    padding-top: 120px;
    justify-items:center;
  }

.pokemon-list li {
    display: grid;
    justify-items: center;
}

.pokemon-card {
    margin: 5px;
    width: 200px;

}

  @media (min-width: 600px) {
    .pokemon-list {
        grid-template-columns: repeat(2, 1fr);
        padding-top: 10px; /* Two columns on medium screens */

    }
  }
  
  @media (min-width: 1024px) {
    .pokemon-list {
      grid-template-columns: repeat(3, 1fr); /* Three columns on large screens */
    }
  }
  
  @media (min-width: 1440px) {
    .pokemon-list {
      grid-template-columns: repeat(4, 1fr); /* Four columns on extra large screens */
    }
  }

  .pokemon-stats {
    padding: 10px;
    border-top: 1px solid #ddd; /* subtle division from the rest of the card */
    margin-top: 10px;
  }
  
  .pokemon-stats h4 {
    margin-bottom: 8px;
    font-size: 1.2em;
  }
  
  .stat-item {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    height:38px;
  }

  .stat-label-container {
    flex-basis: 30%;
    text-align: right;
    padding-right: 10px;
  }

  .stat-label {
    flex-basis: 40%; /* Adjust as needed */
    text-align: right;
    margin-right: 5px; /* Spacing between label and bar */
  }
  

  .stat-bar-container {
    width: 100px;
    background-color: #e0e0e0;
    border-radius: 5px;
    overflow: hidden;
    margin-right: 8px;
  }
  
  .stat-bar {
    height: 10px;
    border-radius: 5px;
    transition: width 0.5s ease-in-out;
    /* Dynamic width based on stat value */
  }
  
  .stat-value {
    width: 10px;
    text-align: center;
  }
  
  

.pokemon-card img {
    width: 100px;
    height: auto;
    border: solid black;
    justify-items: center;
}

.header {
    position:fixed;
    display: flex;
    justify-content: center;
    align-items: center;;
    flex-wrap: wrap;
    top: 0;
    width: 100%;
    background-color: #fff;
    z-index: 1000;
}

.header img {
    margin: auto;
}

.header.visible {
    transform: translateY(0);
}

.header input[type="text"] {
    padding: 8px;
    margin-left: auto;
    margin-right: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
}
@media (max-width: 599px) {
    .header {
        transition: transform 0,3s ease-in;
    }

    .header:not(.visible) {
        transform: translateY(-100%);
    }

    .header input[type="text"]{
        margin-left: 0px;
        margin-top: 10px;
    }
}

@media (min-width: 600px){
    .header {
        position: sticky;
    }
}
